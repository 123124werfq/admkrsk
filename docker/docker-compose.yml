version: '3.4'

services:

  nginx:
    image: registry.nonoobs.ru/admkrsk/nginx
    ports:
      - "8080:80"
      - "8081:81"
      - "8082:82"
    volumes:
      - ./../log:/src/log
      - ./../backend/web:/src/backend/web
      - ./../frontend/web:/src/frontend/web
      - backend-assets:/src/backend/web/assets
      - frontend-assets:/src/frontend/web/assets
    links:
      - php
      - minio

  php:
    image: registry.nonoobs.ru/admkrsk/php-fpm
    env_file: ./../.env
    volumes:
      - ./../:/src
      - backend-assets:/src/backend/web/assets
      - frontend-assets:/src/frontend/web/assets
    links:
      - postgres
      - mongo
      - redis

  queue:
    image: registry.nonoobs.ru/admkrsk/php-fpm
    env_file: ./../.env
    restart: on-failure
    volumes:
      - ./../:/src
      - backend-assets:/src/backend/web/assets
      - frontend-assets:/src/frontend/web/assets
    links:
      - postgres
      - mongo
      - redis
    command: yii queue/listen -v

  schedule:
    image: registry.nonoobs.ru/admkrsk/php-fpm
    env_file: ./../.env
    restart: on-failure
    volumes:
      - ./../:/src
      - backend-assets:/src/backend/web/assets
      - frontend-assets:/src/frontend/web/assets
    links:
      - postgres
      - mongo
      - redis
    command: schedule

  postgres:
    image: registry.nonoobs.ru/admkrsk/postgres
    env_file: ./../.env
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./postgres/dumps:/dumps
    ports:
      - "5432:5432"

  mongo:
    image: registry.nonoobs.ru/admkrsk/mongo
    env_file: ./../.env
    volumes:
      - mongodata:/data/db
      - ./mongo/dumps:/dumps
    ports:
      - "27017:27017"

  redis:
    image: registry.nonoobs.ru/admkrsk/redis
    env_file: ./../.env
    volumes:
      - redisdata:/data
    ports:
      - "6379:6379"

  minio:
    image: registry.nonoobs.ru/admkrsk/minio
    env_file: ./../.env
    networks:
      default:
        aliases:
          - minio.local
    ports:
      - "9000:9000"
    volumes:
      - miniodata:/data
    command: server /data

volumes:
  backend-assets:
    driver: local
  frontend-assets:
    driver: local
  pgdata:
    driver: local
  mongodata:
    driver: local
  redisdata:
    driver: local
  miniodata:
    driver: local
